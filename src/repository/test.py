
import uuid
import json
from datetime import datetime, date
from google.cloud import bigquery
from pydantic import BaseModel
from typing import Dict, Any, List, Literal, Optional
import io

from conversation import ConversationRepository
from message import MessageRepository
from form import FormRepository
from user import UserRepository
from pathlib import Path
from chat.memory import MessageContent, MessagesContentTypeAdapter



# Aseg√∫rate de que todas tus clases de repositorio y modelos (UserModel, ConversationModel, etc.)
# est√©n definidas o importadas aqu√≠.

# --- Inicio del script de pruebas ---




if __name__ == "__main__":
    # Reemplaza estos valores con la informaci√≥n de tu proyecto de Google Cloud
    PROJECT_ID = "adept-storm-467519-j4"
    DATASET_ID = "reto_winter_equipo1"

    try:
        # Inicializa el cliente y el repositorio
        client = bigquery.Client(project=PROJECT_ID)
        ithaka_repo = FormRepository(client, PROJECT_ID, DATASET_ID)
    except Exception as e:
        print(f"‚ùå Error al inicializar el cliente de BigQuery: {e}")
        exit()

    print("--- üß™ Iniciando prueba de creaci√≥n y lectura de formulario üß™ ---")

    # Define los datos de un formulario de prueba
    test_form_data = {
        "message_id": str(uuid.uuid4()),
        "name": "Prueba de Integraci√≥n 3",
        "first_question": "Comit√© de evaluaci√≥n",
        "date_of_completion": date.today(),
        "evaluators": ("Jos√© Alonso", "Mart√≠n Abreu"),
        "idea": "Plataforma de IA para el an√°lisis de mercado",
        "sponsor": "Florencia Clemente",
        "ucu_community_members": ("Egresado/a", "Docente"),
        "linked_faculty": ("FIT", "UCU BUSINESS"),
        "stage": ("Ideaci√≥n", "NULL"),
        "profile_type": ["ANII (Disrupci√≥n y escala)", "Impacto Social"],
        "potential_support": ["Mentoria/Tutor√≠a (elegir de la lista a continuaci√≥n)", "Club de beneficios"],
        "specific_mentor": ["Luis Silveira"],
        "follow_up_personnel": ("Jos√© Alonso",  "NULL"),
        "internal_comments": "Excelente potencial para el mercado uruguayo.",
        "message_for_applicant": "Felicidades, tu idea ha sido seleccionada para la siguiente etapa.",
    }

    # 1. Prueba de creaci√≥n
    print("\n[INFO] Creando un nuevo formulario de evaluaci√≥n...")
    try:
        form_id = ithaka_repo.create(**test_form_data)
        print(f"‚úÖ Formulario creado con √©xito. ID: {form_id}")
    except Exception as e:
        print(f"‚ùå Error al crear el formulario: {e}")
        form_id = None

    # 2. Prueba de lectura
    if form_id:
        print("\n[INFO] Leyendo el formulario reci√©n creado...")
        try:
            read_form = ithaka_repo.read("Prueba de Integraci√≥n 3")
            if read_form:
                print(f"‚úÖ Formulario le√≠do con √©xito.")
                print(f"  - Nombre del formulario: {read_form.name}")
                print(f"  - Idea: {read_form.idea}")
                print(f"  - Mensaje para el postulante: {read_form.message_for_applicant}")
            else:
                print(f"‚ùå Error: No se encontr√≥ el formulario con ID {form_id}")
        except Exception as e:
            print(f"‚ùå Error al leer el formulario: {e}")
    else:
        print("\n[INFO] Se salt√≥ la prueba de lectura debido a un fallo en la creaci√≥n.")

    print("\n--- ‚úÖ Pruebas completadas. ---")
